(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function i(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(o){if(o.ep)return;o.ep=!0;const r=i(o);fetch(o.href,r)}})();const c="https://wft-geo-db.p.rapidapi.com/v1/geo",d={method:"GET",headers:{"X-RapidAPI-Key":"531a0d63c9msh1c39074e5e042b7p1416bdjsna0b645cce4ea","X-RapidAPI-Host":"wft-geo-db.p.rapidapi.com"}},g="https://pixabay.com/api/",f="33672765-518d7195c88fbb2c43ba1bb68";class u{async fetchCityData(e,i=""){try{const t=`${c}/cities?namePrefix=${encodeURIComponent(e)}${i?`&countryIds=${i}`:""}`,o=await fetch(t,d);if(!o.ok)throw new Error("Failed to fetch city data");const r=await o.json();if(!r.data||r.data.length===0)throw new Error("City not found");return r.data.map(n=>({id:n.id,name:n.name,country:n.country,countryCode:n.countryCode,region:n.region,population:n.population,elevation:n.elevationMeters,latitude:n.latitude,longitude:n.longitude}))}catch(t){throw console.error("API Error (fetchCityData):",t),new Error("Failed to retrieve city information. Please try again later.")}}async fetchRandomCity(){try{let e=[];const i=await fetch(`${c}/countries?limit=10`,d);i.ok?e=(await i.json()).data:(console.warn("Falling back to hardcoded countries (API not OK)"),e=[{code:"US",name:"United States"},{code:"GB",name:"United Kingdom"},{code:"FR",name:"France"},{code:"JP",name:"Japan"},{code:"BR",name:"Brazil"},{code:"IN",name:"India"},{code:"ZA",name:"South Africa"},{code:"NG",name:"Nigeria"},{code:"EG",name:"Egypt"},{code:"CA",name:"Canada"}]);const t=e[Math.floor(Math.random()*e.length)],o=await fetch(`${c}/countries/${t.code}/cities?limit=20`,d);if(!o.ok)throw new Error("Failed to fetch cities for country");const n=(await o.json()).data;if(!n||n.length===0)throw new Error("No cities found");const s=n[Math.floor(Math.random()*n.length)];return{id:s.id,name:s.name,country:t.name,countryCode:t.code,region:s.region,population:s.population,elevation:s.elevationMeters,latitude:s.latitude,longitude:s.longitude}}catch(e){console.error("API Error (fetchRandomCity):",e);const i=[{id:"new-york",name:"New York",country:"United States",countryCode:"US",region:"New York",population:8419600,elevation:10,latitude:40.7128,longitude:-74.006},{id:"tokyo",name:"Tokyo",country:"Japan",countryCode:"JP",region:"Tokyo",population:13929286,elevation:40,latitude:35.6895,longitude:139.6917},{id:"london",name:"London",country:"United Kingdom",countryCode:"GB",region:"England",population:8982e3,elevation:11,latitude:51.5074,longitude:-.1278}];return i[Math.floor(Math.random()*i.length)]}}async fetchCityImages(e){try{const i=`${g}?key=${f}&q=${encodeURIComponent(e)}+city&image_type=photo&per_page=9`,t=await fetch(i);if(!t.ok)throw new Error("Failed to fetch images");const o=await t.json();return!o.hits||o.hits.length===0?[]:o.hits.map(r=>({id:r.id,previewURL:r.previewURL,webformatURL:r.webformatURL,tags:r.tags}))}catch(i){return console.error("API Error (fetchCityImages):",i),[]}}async fetchCountries(){const e=[{code:"US",name:"United States"},{code:"CA",name:"Canada"},{code:"GB",name:"United Kingdom"},{code:"AU",name:"Australia"},{code:"ZA",name:"South Africa"},{code:"IN",name:"India"},{code:"DE",name:"Germany"},{code:"FR",name:"France"},{code:"IT",name:"Italy"},{code:"JP",name:"Japan"},{code:"CN",name:"China"},{code:"BR",name:"Brazil"},{code:"MX",name:"Mexico"},{code:"NG",name:"Nigeria"},{code:"KE",name:"Kenya"},{code:"EG",name:"Egypt"},{code:"RU",name:"Russia"}];try{const i=await fetch(`${c}/countries?limit=250`,d);if(!i.ok)return console.warn("Falling back to hardcoded countries (API not OK)"),e;const t=await i.json();return!t.data||t.data.length===0?(console.warn("Falling back to hardcoded countries (no data returned)"),e):t.data.map(o=>({code:o.code,name:o.name}))}catch(i){return console.error("API Error (fetchCountries):",i),e}}}const l="wanderwise_favorites",m="wanderwise_recent_searches";class h{getFavorites(){const e=localStorage.getItem(l);return e?JSON.parse(e):[]}addFavorite(e){const i=this.getFavorites();i.some(t=>t.id===e.id)||(i.push(e),localStorage.setItem(l,JSON.stringify(i)))}removeFavorite(e){let i=this.getFavorites();i=i.filter(t=>t.id!==e),localStorage.setItem(l,JSON.stringify(i))}isFavorite(e){return this.getFavorites().some(t=>t.id===e)}saveRecentSearch(e){let i=this.getRecentSearches();i=i.filter(t=>t.id!==e.id),i.unshift(e),i.length>5&&i.pop(),localStorage.setItem(m,JSON.stringify(i))}getRecentSearches(){const e=localStorage.getItem(m);return e?JSON.parse(e):[]}}class v{constructor(){this.citySection=document.getElementById("city-section"),this.cityName=document.getElementById("city-name"),this.cityCountry=document.getElementById("city-country"),this.cityRegion=document.getElementById("city-region"),this.cityPopulation=document.getElementById("city-population"),this.cityElevation=document.getElementById("city-elevation"),this.cityLatitude=document.getElementById("city-latitude"),this.cityLongitude=document.getElementById("city-longitude"),this.imageGallery=document.getElementById("image-gallery"),this.favoriteBtn=document.getElementById("favorite-btn")}renderCityDetails(e){this.cityName.textContent=`${e.name}, ${e.country}`,this.cityCountry.textContent=e.country,this.cityRegion.textContent=e.region,this.cityPopulation.textContent=e.population?e.population.toLocaleString():"N/A",this.cityElevation.textContent=e.elevation?`${e.elevation} m`:"N/A",this.cityLatitude.textContent=e.latitude,this.cityLongitude.textContent=e.longitude,this.renderMap(e)}renderImageGallery(e){if(this.imageGallery.innerHTML="",e.length===0){this.imageGallery.innerHTML="<p>No images found for this city.</p>";return}e.forEach(i=>{const t=document.createElement("div");t.className="image-item",t.innerHTML=`
        <img src="${i.webformatURL}" alt="${i.tags}" />
      `,this.imageGallery.appendChild(t)})}updateFavoriteButton(e){e?this.favoriteBtn.classList.add("active"):this.favoriteBtn.classList.remove("active")}show(){this.citySection.classList.remove("hidden")}hide(){this.citySection.classList.add("hidden")}renderMap(e){let i;this.map&&this.map.remove(),this.map=i.map("map").setView([e.latitude,e.longitude],10),i.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(this.map),i.marker([e.latitude,e.longitude]).addTo(this.map).bindPopup(`${e.name}, ${e.country}`).openPopup()}}class w{constructor(){this.errorSection=document.getElementById("error-section"),this.errorMessage=document.getElementById("error-message")}showError(e){this.errorMessage.textContent=e,this.errorSection.classList.remove("hidden")}hide(){this.errorSection.classList.add("hidden")}}class p{constructor(){this.loadingSection=document.getElementById("loading-section")}show(){this.loadingSection.classList.remove("hidden")}hide(){this.loadingSection.classList.add("hidden")}}class C{constructor(){this.apiService=new u,this.storageService=new h,this.cityView=new v,this.errorView=new w,this.loadingView=new p,this.currentCity=null,this.moreInfoBtn=document.getElementById("more-info-btn"),this.extraInfoBox=document.getElementById("extra-info-box"),this.initEventListeners()}initEventListeners(){document.getElementById("search-btn").addEventListener("click",()=>this.searchCity()),document.getElementById("city-search").addEventListener("keypress",e=>{e.key==="Enter"&&this.searchCity()}),document.getElementById("random-btn").addEventListener("click",()=>this.getRandomCity())}async searchCity(){const e=document.getElementById("city-search").value.trim(),i=document.getElementById("country-filter").value;if(!e){this.errorView.showError("Please enter a city name");return}try{this.loadingView.show(),this.errorView.hide();const t=await this.apiService.fetchCityData(e,i);if(!t||t.length===0)throw new Error("City not found. Please try another name.");this.currentCity=t[0];const o=await this.apiService.fetchCityImages(this.currentCity.name);this.storageService.saveRecentSearch(this.currentCity),this.cityView.renderCityDetails(this.currentCity),this.cityView.renderImageGallery(o),this.cityView.updateFavoriteButton(this.storageService.isFavorite(this.currentCity.id)),this.cityView.show(),document.getElementById("city-search").value="",this.loadingView.hide()}catch(t){this.loadingView.hide(),this.errorView.showError(t.message),console.error("Search error:",t)}this.moreInfoBtn.addEventListener("click",async()=>{if(!this.currentCity){this.errorView.showError("Please select a city first.");return}this.extraInfoBox.textContent="Loading information...";const t=await this.fetchExtraInfo(this.currentCity.name);this.extraInfoBox.textContent=t})}async getRandomCity(){try{this.loadingView.show(),this.errorView.hide(),this.currentCity=await this.apiService.fetchRandomCity();const e=await this.apiService.fetchCityImages(this.currentCity.name);this.storageService.saveRecentSearch(this.currentCity),this.cityView.renderCityDetails(this.currentCity),this.cityView.renderImageGallery(e),this.cityView.updateFavoriteButton(this.storageService.isFavorite(this.currentCity.id)),this.cityView.show(),this.loadingView.hide()}catch(e){this.loadingView.hide(),this.errorView.showError(e.message),console.error("Random city error:",e)}}getCurrentCity(){return this.currentCity}async fetchExtraInfo(e){const i=`https://en.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(e)}`;try{const t=await fetch(i);if(!t.ok)throw new Error("Info not found");return(await t.json()).extract||"No additional information available."}catch(t){return console.error("Extra info fetch error:",t),"Failed to load extra info."}}}class E{constructor(){this.favoritesSection=document.getElementById("favorites-section"),this.favoritesList=document.getElementById("favorites-list"),this.favoriteBtn=document.getElementById("favorite-btn")}renderFavoritesList(e){if(this.favoritesList.innerHTML="",e.length===0){this.favoritesList.innerHTML='<p class="no-favorites">No favorite cities yet.</p>';return}e.forEach(i=>{const t=document.createElement("div");t.className="favorite-item",t.dataset.id=i.id,t.innerHTML=`
        <svg class="icon" viewBox="0 0 24 24">
          <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
        </svg>
        <div>
          <strong>${i.name}</strong>
          <p>${i.country}</p>
        </div>
      `,this.favoritesList.appendChild(t)})}updateFavoriteButton(e){e?this.favoriteBtn.classList.add("active"):this.favoriteBtn.classList.remove("active")}show(){this.favoritesSection.classList.remove("hidden")}hide(){this.favoritesSection.classList.add("hidden")}isVisible(){return!this.favoritesSection.classList.contains("hidden")}}class I{constructor(e){this.storageService=new h,this.favoriteView=new E,this.cityController=e,this.initEventListeners()}initEventListeners(){document.getElementById("favorite-btn").addEventListener("click",()=>this.toggleFavorite()),document.getElementById("favorites-btn").addEventListener("click",()=>this.showFavorites()),document.getElementById("close-favorites").addEventListener("click",()=>this.hideFavorites()),document.getElementById("favorites-list").addEventListener("click",e=>{if(e.target.closest(".favorite-item")){const i=e.target.closest(".favorite-item").dataset.id;this.loadFavoriteCity(i)}})}toggleFavorite(){const e=this.cityController.getCurrentCity();if(!e)return;this.storageService.isFavorite(e.id)?(this.storageService.removeFavorite(e.id),this.favoriteView.updateFavoriteButton(!1)):(this.storageService.addFavorite(e),this.favoriteView.updateFavoriteButton(!0)),this.favoriteView.isVisible()&&this.favoriteView.renderFavoritesList(this.storageService.getFavorites())}showFavorites(){this.favoriteView.renderFavoritesList(this.storageService.getFavorites()),this.favoriteView.show()}hideFavorites(){this.favoriteView.hide()}async loadFavoriteCity(e){const t=this.storageService.getFavorites().find(o=>o.id===e);if(t)try{this.cityController.loadingView.show();const o=await this.cityController.apiService.fetchCityImages(t.name);this.cityController.currentCity=t,this.cityController.cityView.renderCityDetails(t),this.cityController.cityView.renderImageGallery(o),this.cityController.cityView.updateFavoriteButton(!0),this.cityController.cityView.show(),this.hideFavorites(),this.cityController.loadingView.hide()}catch(o){this.cityController.loadingView.hide(),this.cityController.errorView.showError("Failed to load city details"),console.log(o)}}}class S{constructor(){this.recentList=document.getElementById("recent-list")}renderRecentSearches(e){this.recentList.innerHTML="",e.forEach(i=>{const t=document.createElement("div");t.className="recent-item",t.dataset.id=i.id,t.textContent=`${i.name}, ${i.country}`,this.recentList.appendChild(t)})}}class L{constructor(e){this.storageService=new h,this.recentView=new S,this.cityController=e,this.initEventListeners(),this.renderRecentSearches()}initEventListeners(){document.getElementById("recent-list").addEventListener("click",e=>{if(e.target.classList.contains("recent-item")){const i=e.target.dataset.id;this.loadRecentCity(i)}})}renderRecentSearches(){this.recentView.renderRecentSearches(this.storageService.getRecentSearches())}async loadRecentCity(e){const t=this.storageService.getRecentSearches().find(o=>o.id===e);if(t)try{this.cityController.loadingView.show();const o=await this.cityController.apiService.fetchCityImages(t.name);this.cityController.currentCity=t,this.cityController.cityView.renderCityDetails(t),this.cityController.cityView.renderImageGallery(o),this.cityController.cityView.updateFavoriteButton(this.storageService.isFavorite(t.id)),this.cityController.cityView.show(),this.cityController.loadingView.hide()}catch(o){this.cityController.loadingView.hide(),this.cityController.errorView.showError("Failed to load city details"),console.log(o)}}}const y=new C;new I(y);new L(y);async function F(){const e=await new u().fetchCountries(),i=document.getElementById("country-filter");i.innerHTML='<option value="">Filter by country...</option>',e.forEach(t=>{const o=document.createElement("option");o.value=t.code,o.textContent=t.name,i.appendChild(o)})}document.addEventListener("DOMContentLoaded",()=>{F()});
